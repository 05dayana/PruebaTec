// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTec.Models;

#nullable disable

namespace PruebaTec.Migrations
{
    [DbContext(typeof(dbcontext))]
    [Migration("20250315214010_creacionbd")]
    partial class creacionbd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PruebaTec.Models.Categoria", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("creadoDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("PruebaTec.Models.Clientes", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("creadoDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipocliente")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PruebaTec.Models.Detalle_Pedido", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("creadoDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("idpedido")
                        .HasColumnType("bigint")
                        .HasColumnName("idpedido");

                    b.Property<long>("idproducto")
                        .HasColumnType("bigint")
                        .HasColumnName("idproducto");

                    b.HasKey("id");

                    b.HasIndex("idpedido");

                    b.HasIndex("idproducto");

                    b.ToTable("Detalle_pedido");
                });

            modelBuilder.Entity("PruebaTec.Models.Pedido", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("creadoDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechapedido")
                        .HasColumnType("datetime2");

                    b.Property<long>("idcliente")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("idcliente");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("PruebaTec.Models.Productos", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("creadoDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("idcat")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("idcat");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PruebaTec.Models.Detalle_Pedido", b =>
                {
                    b.HasOne("PruebaTec.Models.Pedido", "pedido")
                        .WithMany("detalle_Pedidos")
                        .HasForeignKey("idpedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PruebaTec.Models.Productos", "producto")
                        .WithMany()
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("PruebaTec.Models.Pedido", b =>
                {
                    b.HasOne("PruebaTec.Models.Clientes", "clientes")
                        .WithMany("pedidos")
                        .HasForeignKey("idcliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("clientes");
                });

            modelBuilder.Entity("PruebaTec.Models.Productos", b =>
                {
                    b.HasOne("PruebaTec.Models.Categoria", "categoria")
                        .WithMany("productos")
                        .HasForeignKey("idcat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("PruebaTec.Models.Categoria", b =>
                {
                    b.Navigation("productos");
                });

            modelBuilder.Entity("PruebaTec.Models.Clientes", b =>
                {
                    b.Navigation("pedidos");
                });

            modelBuilder.Entity("PruebaTec.Models.Pedido", b =>
                {
                    b.Navigation("detalle_Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
